@mixin flex($direction: null,$align: null,$justify: null) {
  display: flex;
  //DIrection
  @if ($direction != null) {
    flex-direction: $direction;
  }
  @if ($direction == column) {
    flex-direction: $direction;
  }
  @if ($direction == column-r) {
    flex-direction: column-reverse;
  }
  //Align
  @if ($align != null) {
    @if ($align == align-center) {
      align-items: center;
    }
    @if ($align == align-start) {
      align-items: flex-start;
    }
    @if ($align == align-end) {
      align-items: flex-end;
    }
    @if ($align == align-str) {
      align-items: stretch;
    }
  }
  //Justify
  @if ($justify != null) {
    @if ($justify == justify-center) {
      justify-content: center;
    }
    @if ($justify == justify-between) {
      justify-content: space-between;
    }
    @if ($justify == justify-start) {
      justify-content: flex-start;
    }
    @if ($justify == justify-end) {
      justify-content: flex-end;
    }
  }
}

// px to rem
@function rem($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1rem;
}

// size to one line
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// placeholder helper
@mixin placeholder {
  ::-webkit-input-placeholder {
    @content;
  }
  :-moz-placeholder {
    @content;
  }
  ::-moz-placeholder {
    @content;
  }
  :-ms-input-placeholder {
    @content;
  }
}


@mixin font-face(
  $font-family,
  $file-path,
  $weight: normal,
  $style: normal,
  $asset-pipeline: false
) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    src: url('#{$file-path}.woff') format('woff'),
      url('#{$file-path}.woff2') format('woff2');
  }
}


